# Generated by Django 2.0.1 on 2018-05-08 07:04

from django.db import migrations, models
import django_pki.common.elliptic_curve
import django_pki.common.encoding
import django_pki.common.encryption_schema
import django_pki.common.private_format
import django_pki.common.private_key_size
import enumfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PrivateKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_name', models.CharField(help_text='The name to identify the private key.', max_length=256, verbose_name='Name')),
                ('encryption_schema', enumfields.fields.EnumField(default='EC', enum=django_pki.common.encryption_schema.EncryptionSchema, help_text='The private key encryption schema.', max_length=1, verbose_name='Encryption Schema')),
                ('key_size', enumfields.fields.EnumField(blank=True, enum=django_pki.common.private_key_size.PrivateKeySize, help_text='The private key size.', max_length=1, null=True, verbose_name='Private Key Size')),
                ('elliptic_curve', enumfields.fields.EnumField(blank=True, default='SECP521R1', enum=django_pki.common.elliptic_curve.EllipticCurve, help_text='The elliptic curve.', max_length=1, null=True, verbose_name='Elliptic Curve')),
                ('encoding', enumfields.fields.EnumField(default='PEM', enum=django_pki.common.encoding.Encoding, help_text='The private key encoding.', max_length=1, verbose_name='Encoding')),
                ('format', enumfields.fields.EnumField(default='PKCS8', enum=django_pki.common.private_format.PrivateFormat, help_text='The private key format.', max_length=1, verbose_name='Format')),
                ('is_encrypted', models.BooleanField(default=False, help_text='Is the private key encrypted (typically by a passphrase)?', max_length=1, verbose_name='Encrypted')),
                ('key_bytes', models.BinaryField(blank=True, help_text='Binary representation of the private key.', null=True, verbose_name='Key Bytes')),
            ],
        ),
    ]
